<?php


/**
 * Unit tests for RESTServer class.
 */
class ServicesRESTServerTests extends DrupalUnitTestCase {

  /**
   * Implementation of getInfo().
   */
  public static function getInfo() {
    return array(
      'name' => t('RESTServer unit tests'),
      'description' => t('Test separate methods of class.'),
      'group' => t('Services'),
    );
  }

  public function setUp() {
    parent::setUp();

    $this->loadFile('includes/RESTServer.inc');
    $this->loadFile('includes/ServicesContentTypeNegotiator.inc');
    $this->loadFile('includes/ServicesContext.inc');
    $this->loadFile('includes/ServicesParser.inc');
    $this->loadFile('includes/ServicesRESTServerFactory.inc');
    $this->loadFile('tests/rest_server.test');
  }

  protected function loadFile($filepath) {
    require_once str_replace('tests/ServicesRESTServerTests.test', $filepath, __FILE__);
  }

  /**
   * Test method getResourceName().
   */
  public function testGetResourceName() {
    $endpoint_path = 'rest';
    $context_data = array(
      'get' => array('q' => 'rest/node/1.php'),
      'server' => array(),
      'post' => array(),
      'request_body' => '',
    );

    $rest_server_factory = new MockServicesRESTServerFactory(array('context_data' => $context_data));
    $rest_server = $rest_server_factory->getRESTServer($endpoint_path);

    $resource_name = $rest_server->getResourceName();
    $this->assertEqual($resource_name, 'node', 'Retrieve call resource name determined properly.');


    $context_data['get']['q'] = 'rest/user';
    $rest_server_factory = new MockServicesRESTServerFactory(array('context_data' => $context_data));
    $rest_server = $rest_server_factory->getRESTServer($endpoint_path);

    $resource_name = $rest_server->getResourceName();
    $this->assertEqual($resource_name, 'user', 'Index call resource name determined properly.');
  }
}
